# KallistiOS environment variable settings
# This is a sample script; the 'configure' program can produce a full
#   script for you, but that's assuming that 'cdialog' works on your
#   system. If not, you may want to edit this script (for TCSH) or 
#   environ.sh (for Bash) and use that.
# This script is for the DC configuation only!
# $Id: environ-dc.tcsh.sample,v 1.4 2002/03/04 06:18:08 bardtx Exp $

# Build architecture
setenv KOS_ARCH "dreamcast"

# Compiler base strings
setenv KOS_CC_BASE "/usr/local/dc/sh-elf"
setenv KOS_CC_PREFIX "sh-elf"

# KOS base paths
setenv KOS_BASE "/home/bard/prj/kos"
setenv KOS_INCS "${KOS_BASE}/include"

# Make utility
setenv KOS_MAKE "make"

# Load utility
setenv KOS_LOADER "dc-tool -x"

# Genromfs utility
setenv KOS_GENROMFS "${KOS_BASE}/utils/genromfs/genromfs"

# SH-4 GCC paths
setenv KOS_CC "${KOS_CC_BASE}/bin/${KOS_CC_PREFIX}-gcc"
setenv KOS_CCPLUS "${KOS_CC_BASE}/bin/${KOS_CC_PREFIX}-g++"
setenv KOS_AS "${KOS_CC_BASE}/bin/${KOS_CC_PREFIX}-as"
setenv KOS_AR "${KOS_CC_BASE}/bin/${KOS_CC_PREFIX}-ar"
setenv KOS_OBJCOPY "${KOS_CC_BASE}/bin/${KOS_CC_PREFIX}-objcopy"
setenv KOS_LD "${KOS_CC_BASE}/bin/${KOS_CC_PREFIX}-ld"
setenv KOS_STRIP "${KOS_CC_BASE}/bin/${KOS_CC_PREFIX}-strip"
setenv KOS_CFLAGS "-Wall -g -ml -m4-single-only -O1 -fno-builtin -fno-strict-aliasing -fomit-frame-pointer -fno-optimize-sibling-calls"
setenv KOS_CPPFLAGS "-fno-operator-names -fno-rtti -fno-exceptions"
setenv KOS_AFLAGS "-little"
setenv KOS_LDFLAGS "-ml -m4-single-only -nostartfiles -nostdlib -Wl,-Ttext=0x8c010000 -L${KOS_BASE}/lib"
setenv KOS_LIBS "-lkallisti -lgcc"

# ARM7 GCC paths
setenv DC_ARM7BASE "/usr/local/dc/arm-elf"
setenv DC_ARM7CC "${DC_ARM7BASE}/bin/arm-elf-gcc"
setenv DC_ARM7AS "${DC_ARM7BASE}/bin/arm-elf-as"
setenv DC_ARM7AR "${DC_ARM7BASE}/bin/arm-elf-ar"
setenv DC_ARM7OBJCOPY "${DC_ARM7BASE}/bin/arm-elf-objcopy"
setenv DC_ARM7LD "${DC_ARM7BASE}/bin/arm-elf-ld"
setenv DC_ARM7CFLAGS "-mcpu=arm7 -Wall -O2"
setenv DC_ARM7AFLAGS "-marm7"

