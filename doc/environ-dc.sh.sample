# KallistiOS environment variable settings
# This is a sample script; the 'configure' program can produce a full
#   script for you, but that's assuming that 'cdialog' works on your
#   system. If not, you may want to edit this script (for Bash) or 
#   environ.tcsh (for TCSH) and use that.
# This script is for the DC configuation only!
# $Id: environ-dc.sh.sample,v 1.4 2002/03/04 06:18:08 bardtx Exp $

# Build architecture
export KOS_ARCH="dreamcast"

# Compiler base strings
export KOS_CC_BASE="/usr/local/dc/sh-elf"
export KOS_CC_PREFIX="sh-elf"

# KOS base paths
export KOS_BASE="/home/bard/prj/kos"
export KOS_INCS="${KOS_BASE}/include"

# Make utility
export KOS_MAKE="make"

# Load utility
export KOS_LOADER="dc-tool -x"

# Genromfs utility
export KOS_GENROMFS="${KOS_BASE}/utils/genromfs/genromfs"

# SH-4 GCC paths
export KOS_CC="${KOS_CC_BASE}/bin/${KOS_CC_PREFIX}-gcc"
export KOS_CCPLUS="${KOS_CC_BASE}/bin/${KOS_CC_PREFIX}-g++"
export KOS_AS="${KOS_CC_BASE}/bin/${KOS_CC_PREFIX}-as"
export KOS_AR="${KOS_CC_BASE}/bin/${KOS_CC_PREFIX}-ar"
export KOS_OBJCOPY="${KOS_CC_BASE}/bin/${KOS_CC_PREFIX}-objcopy"
export KOS_LD="${KOS_CC_BASE}/bin/${KOS_CC_PREFIX}-ld"
export KOS_STRIP="${KOS_CC_BASE}/bin/${KOS_CC_PREFIX}-strip"
export KOS_CFLAGS="-Wall -g -ml -m4-single-only -O2 -fno-builtin -fno-strict-aliasing -fomit-frame-pointer -fno-optimize-sibling-calls"
export KOS_CPPFLAGS="-fno-operator-names -fno-rtti -fno-exceptions"
export KOS_AFLAGS="-little"
export KOS_LDFLAGS="-ml -m4-single-only -nostartfiles -nostdlib -Wl,-Ttext=0x8c010000"

# ARM7 GCC paths
export DC_ARM7BASE="/usr/local/dc/arm-elf"
export DC_ARM7CC="${DC_ARM7BASE}/bin/arm-elf-gcc"
export DC_ARM7AS="${DC_ARM7BASE}/bin/arm-elf-as"
export DC_ARM7AR="${DC_ARM7BASE}/bin/arm-elf-ar"
export DC_ARM7OBJCOPY="${DC_ARM7BASE}/bin/arm-elf-objcopy"
export DC_ARM7LD="${DC_ARM7BASE}/bin/arm-elf-ld"
export DC_ARM7CFLAGS="-mcpu=arm7 -Wall -O2"
export DC_ARM7AFLAGS="-marm7"

